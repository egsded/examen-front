{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cliente: {\n        nombres: '',\n        apellidoPaterno: '',\n        apellidoMaterno: '',\n        correoElectronico: '',\n        idDomicilio: 0\n      },\n      clientes: [],\n      modoEditar: false,\n      clienteSeleccionado: null,\n      token: null\n    };\n  },\n  created() {\n    this.getToken();\n  },\n  methods: {\n    async getToken() {\n      try {\n        const data = {\n          \"email\": \"correo@gmail.com\",\n          \"password\": \"12345\"\n        };\n        const token = await axios.post('/login', data);\n        this.token = token.data.token;\n        this.getListaClientes();\n      } catch (error) {\n        console.error('Error al obtener el token: ', error);\n      }\n    },\n    async getListaClientes() {\n      try {\n        const response = await axios.get('/clientes', {\n          headers: {\n            'Authorization': `Bearer ${this.token}`\n          }\n        });\n        console.log(response.data);\n        this.getColonia(response.data);\n      } catch (error) {\n        console.error('Error al cargar los clientes: ', error);\n      }\n    },\n    async crearCliente() {\n      try {\n        if (this.modoEditar) {\n          await axios.put(`/cliente/editar/${this.clienteSeleccionado}`, this.cliente, {\n            headers: {\n              'Authorization': `Bearer ${this.token}`\n            }\n          });\n        } else {\n          await axios.post('/cliente/crear', this.cliente, {\n            headers: {\n              'Authorization': `Bearer ${this.token}`\n            }\n          });\n        }\n        this.getListaClientes();\n        this.resetForm();\n      } catch (error) {\n        console.error('Error al guardar el cliente: ', error);\n      }\n    },\n    async eliminarCliente(id) {\n      try {\n        await axios.delete(`/cliente/eliminar/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${this.token}`\n          }\n        });\n        this.getListaClientes();\n      } catch (error) {\n        console.error('Error al eliminar el cliente: ', error);\n      }\n    },\n    async getColonia(cliente) {\n      try {\n        for (const element of cliente) {\n          const response = axios.get(`/colonia/${element.Domicilio.idColonia}`, {\n            headers: {\n              'Authorization': `Bearer ${this.token}`\n            }\n          });\n          console.log(response);\n        }\n      } catch (error) {\n        console.error('Error al buscar la colonia: ', error);\n      }\n    },\n    resetForm() {\n      this.cliente = {\n        nombres: '',\n        apellidoPaterno: '',\n        apellidoMaterno: '',\n        correoElectronico: '',\n        idDomicilio: 0\n      };\n      this.modoEditar = false;\n      this.clienteSeleccionado = null;\n    },\n    editarCliente(cliente) {\n      this.cliente = {\n        ...cliente\n      };\n      this.modoEditar = true;\n      this.clienteSeleccionado = cliente.idClientes;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","cliente","nombres","apellidoPaterno","apellidoMaterno","correoElectronico","idDomicilio","clientes","modoEditar","clienteSeleccionado","token","created","getToken","methods","post","getListaClientes","error","console","response","get","headers","log","getColonia","crearCliente","put","resetForm","eliminarCliente","id","delete","element","Domicilio","idColonia","editarCliente","idClientes"],"sources":["C:\\Users\\johnny\\Documents\\GitHub\\examen-front\\src\\components\\ClientesComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n            <div class=\"container-fluid\">\r\n                <a class=\"navbar-brand\" href=\"/\">Examen</a>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div class=\"navbar-nav\">\r\n                        <a class=\"nav-link active\" href=\"/\">Colonias</a>\r\n                        <a class=\"nav-link active\" href=\"/domicilios\">Domicilios</a>\r\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"/clientes\">Clientes</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <div class=\"text-center mt-4\">\r\n            <h3>Examen</h3>\r\n            <h1>Clientes</h1>\r\n        </div>\r\n        <div class=\"container\">\r\n            <form @submit.prevent=\"crearCliente\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"nombres\" class=\"form-label\">Nombre(s)</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"nombres\" v-model=\"cliente.nombres\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"apellidoPaterno\" class=\"form-label\">Apellido Paterno</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"apellidoPaterno\" v-model=\"cliente.apellidoPaterno\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"apellidoMaterno\" class=\"form-label\">Apellido Materno</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"apellidoMaterno\" v-model=\"cliente.apellidoMaterno\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"correoElectronico\" class=\"form-label\">Correo Electronico</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"correoElectronico\" v-model=\"cliente.correoElectronico\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"idDomicilio\" class=\"form-label\">Domicilio</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"idDomicilio\" v-model=\"cliente.idDomicilio\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Guardar</button>\r\n            </form>\r\n        </div>\r\n        <div class=\"text-center\">\r\n            <h2>Lista de Clientes</h2>\r\n        </div>\r\n        <div class=\"container\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nombre</th>\r\n                        <th>A. Paterno</th>\r\n                        <th>A. Materno</th>\r\n                        <th>Correo</th>\r\n                        <th>Domicilio</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"cli in clientes\" :key=\"cli.idClientes\">\r\n                        <td>{{ cli.idClientes }}</td>\r\n                        <td>{{ cli.nombres }}</td>\r\n                        <td>{{ cli.apellidoPaterno }}</td>\r\n                        <td>{{ cli.apellidoMaterno }}</td>\r\n                        <td>{{ cli.correoElectronico }}</td>\r\n                        <td>{{ cli.Domicilio.calle }} {{ cli.Domicilio.numeroExterno ? \"#\" : \"sin numero\" }}{{\r\n                            cli.Domicilio.numeroExterno }} {{ cli.Domicilio.numeroInterno }}</td>\r\n                        <td>\r\n                            <button class=\"btn btn-info\" @click=\"editarCliente(cli)\">Editar</button>\r\n                            <button class=\"btn btn-danger\" @click=\"eliminarCliente(cli.idClientes)\">Eliminar</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            cliente: {\r\n                nombres: '',\r\n                apellidoPaterno: '',\r\n                apellidoMaterno: '',\r\n                correoElectronico: '',\r\n                idDomicilio: 0\r\n            },\r\n            clientes: [],\r\n            modoEditar: false,\r\n            clienteSeleccionado: null,\r\n            token: null\r\n        };\r\n    },\r\n    created() {\r\n        this.getToken();\r\n    },\r\n    methods: {\r\n        async getToken() {\r\n            try {\r\n                const data = {\r\n                    \"email\": \"correo@gmail.com\",\r\n                    \"password\": \"12345\"\r\n                }\r\n                const token = await axios.post('/login', data);\r\n                this.token = token.data.token;\r\n                this.getListaClientes();\r\n            } catch (error) {\r\n                console.error('Error al obtener el token: ', error);\r\n            }\r\n        },\r\n        async getListaClientes() {\r\n            try {\r\n                const response = await axios.get('/clientes', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${this.token}`\r\n                    }\r\n                });\r\n                console.log(response.data);\r\n                this.getColonia(response.data)\r\n            } catch (error) {\r\n                console.error('Error al cargar los clientes: ', error);\r\n            }\r\n        },\r\n        async crearCliente() {\r\n            try {\r\n                if (this.modoEditar) {\r\n                    await axios.put(`/cliente/editar/${this.clienteSeleccionado}`, this.cliente, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${this.token}`\r\n                        }\r\n                    });\r\n                } else {\r\n                    await axios.post('/cliente/crear', this.cliente, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${this.token}`\r\n                        }\r\n                    })\r\n                }\r\n                this.getListaClientes();\r\n                this.resetForm();\r\n            } catch (error) {\r\n                console.error('Error al guardar el cliente: ', error);\r\n            }\r\n        },\r\n        async eliminarCliente(id) {\r\n            try {\r\n                await axios.delete(`/cliente/eliminar/${id}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${this.token}`\r\n                    }\r\n                });\r\n                this.getListaClientes();\r\n            } catch (error) {\r\n                console.error('Error al eliminar el cliente: ', error);\r\n            }\r\n        },\r\n        async getColonia(cliente) {\r\n            try {\r\n                for (const element of cliente) {\r\n                    const response = axios.get(`/colonia/${element.Domicilio.idColonia}`, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${this.token}`\r\n                        }\r\n                    });\r\n                    console.log(response);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al buscar la colonia: ', error);\r\n            }\r\n        },\r\n        resetForm() {\r\n            this.cliente = {\r\n                nombres: '',\r\n                apellidoPaterno: '',\r\n                apellidoMaterno: '',\r\n                correoElectronico: '',\r\n                idDomicilio: 0\r\n            }\r\n            this.modoEditar = false;\r\n            this.clienteSeleccionado = null;\r\n        },\r\n        editarCliente(cliente) {\r\n            this.cliente = { ...cliente };\r\n            this.modoEditar = true;\r\n            this.clienteSeleccionado = cliente.idClientes;\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}