{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      colonia: {\n        nombre: ''\n      },\n      colonias: [],\n      modoEditar: false,\n      coloniaSeleccionada: null,\n      token: null\n    };\n  },\n  created() {\n    this.getToken();\n  },\n  methods: {\n    async getToken() {\n      try {\n        const data = {\n          \"email\": \"correo@gmail.com\",\n          \"password\": \"12345\"\n        };\n        const token = await axios.post('/login', data);\n        this.token = token.data.token;\n        this.getListaColonia();\n      } catch (error) {\n        console.error('Error al obtener el token: ', error);\n      }\n    },\n    async getListaColonia() {\n      try {\n        const response = await axios.get('/colonias', {\n          headers: {\n            'Authorization': `Bearer ${this.token}`\n          }\n        });\n        this.colonias = response.data;\n      } catch (error) {\n        console.error('Error al cargar las colonias: ', error);\n      }\n    },\n    async crearColonia() {\n      try {\n        if (this.modoEditar) {\n          await axios.put(`colonia/editar/${this.coloniaSeleccionada}`, this.colonia, {\n            headers: {\n              'Authorization': `Bearer ${this.token}`\n            }\n          });\n        } else {\n          await axios.post('/colonia/crear', this.colonia, {\n            headers: {\n              'Authorization': `Bearer ${this.token}`\n            }\n          });\n        }\n        this.getListaColonia();\n        this.resetForm();\n      } catch (error) {\n        console.error('Error al guardar la colonia: ', error);\n      }\n    },\n    async eliminarColonia(id) {\n      try {\n        await axios.delete(`/colonia/eliminar/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${this.token}`\n          }\n        });\n        this.getListaColonia();\n      } catch (error) {\n        console.error('Error al eliminar la Colonia: ', error);\n      }\n    },\n    resetForm() {\n      this.colonia = {\n        nombre: ''\n      };\n      this.modoEditar = false;\n      this.coloniaSeleccionada = null;\n    },\n    editarColonia(colonia) {\n      this.colonia = {\n        ...colonia\n      };\n      this.modoEditar = true;\n      this.coloniaSeleccionada = colonia.idColonia;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","colonia","nombre","colonias","modoEditar","coloniaSeleccionada","token","created","getToken","methods","post","getListaColonia","error","console","response","get","headers","crearColonia","put","resetForm","eliminarColonia","id","delete","editarColonia","idColonia"],"sources":["C:\\Users\\johnny\\Documents\\GitHub\\examen-front\\src\\components\\ColoniasComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n            <div class=\"container-fluid\">\r\n                <a class=\"navbar-brand\" href=\"/\">Examen</a>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div class=\"navbar-nav\">\r\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"/\">Colonias</a>\r\n                        <a class=\"nav-link active\" href=\"/domicilios\">Domicilios</a>\r\n                        <a class=\"nav-link active\" href=\"/clientes\">Clientes</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <div class=\"text-center mt-4\">\r\n            <h3>Examen</h3>\r\n            <h1>Colonias</h1>\r\n        </div>\r\n        <div class=\"container border\">\r\n            <form @submit.prevent=\"crearColonia\" class=\"my-4 mx-4\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"nombre\" class=\"form-label\">Nombre</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"nombre\" v-model=\"colonia.nombre\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Guardar</button>\r\n            </form>\r\n        </div>\r\n        <div class=\"text-center\">\r\n            <h2>Lista de colonias</h2>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col\"></div>\r\n            <table class=\"table table-striped col\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nombre</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"col in colonias\" :key=\"col.idColonia\">\r\n                        <td>{{ col.idColonia }}</td>\r\n                        <td>{{ col.nombre }}</td>\r\n                        <td>\r\n                            <button class=\"btn btn-info\" @click=\"editarColonia(col)\">Editar</button>\r\n                            <button class=\"btn btn-danger\" @click=\"eliminarColonia(col.idColonia)\">Eliminar</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"col\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            colonia: {\r\n                nombre: ''\r\n            },\r\n            colonias: [],\r\n            modoEditar: false,\r\n            coloniaSeleccionada: null,\r\n            token: null\r\n        };\r\n    },\r\n    created() {\r\n        this.getToken();\r\n    },\r\n    methods: {\r\n        async getToken() {\r\n            try {\r\n                const data = {\r\n                    \"email\": \"correo@gmail.com\",\r\n                    \"password\": \"12345\"\r\n                }\r\n                const token = await axios.post('/login', data);\r\n                this.token = token.data.token;\r\n                this.getListaColonia();\r\n            } catch (error) {\r\n                console.error('Error al obtener el token: ', error);\r\n            }\r\n        },\r\n        async getListaColonia() {\r\n            try {\r\n                const response = await axios.get('/colonias', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${this.token}`\r\n                    }\r\n                });\r\n                this.colonias = response.data;\r\n            } catch (error) {\r\n                console.error('Error al cargar las colonias: ', error);\r\n            }\r\n        },\r\n        async crearColonia() {\r\n            try {\r\n                if (this.modoEditar) {\r\n                    await axios.put(`colonia/editar/${this.coloniaSeleccionada}`, this.colonia, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${this.token}`\r\n                        }\r\n                    })\r\n                } else {\r\n                    await axios.post('/colonia/crear', this.colonia, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${this.token}`\r\n                        }\r\n                    });\r\n                }\r\n                this.getListaColonia();\r\n                this.resetForm();\r\n            } catch (error) {\r\n                console.error('Error al guardar la colonia: ', error);\r\n            }\r\n        },\r\n        async eliminarColonia(id) {\r\n            try {\r\n                await axios.delete(`/colonia/eliminar/${id}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${this.token}`\r\n                    }\r\n                });\r\n                this.getListaColonia();\r\n            } catch (error) {\r\n                console.error('Error al eliminar la Colonia: ', error);\r\n            }\r\n        },\r\n        resetForm() {\r\n            this.colonia = {\r\n                nombre: ''\r\n            }\r\n            this.modoEditar = false;\r\n            this.coloniaSeleccionada = null;\r\n        },\r\n        editarColonia(colonia) {\r\n            this.colonia = { ...colonia };\r\n            this.modoEditar = true;\r\n            this.coloniaSeleccionada = colonia.idColonia;\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}