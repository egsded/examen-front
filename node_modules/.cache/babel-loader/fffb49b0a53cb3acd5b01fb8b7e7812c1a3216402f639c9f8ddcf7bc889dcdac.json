{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"mb-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"text-center\"\n  }, [_createElementVNode(\"h3\", null, \"Examen\"), _createElementVNode(\"h1\", null, \"Colonias\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.crearColonia && _ctx.crearColonia(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"nombre\",\n    class: \"form-label\"\n  }, \"Nombre\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"nombre\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.colonia.nombre = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.colonia.nombre]])]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Guardar\")], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","onSubmit","_cache","_withModifiers","args","_ctx","crearColonia","_hoisted_2","for","type","id","$event","$data","colonia","nombre"],"sources":["C:\\Users\\johnny\\Documents\\GitHub\\examen-front\\src\\components\\ColoniasComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"text-center\">\r\n            <h3>Examen</h3>\r\n            <h1>Colonias</h1>\r\n        </div>\r\n        <div class=\"container\">\r\n            <form @submit.prevent=\"crearColonia\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"nombre\" class=\"form-label\">Nombre</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"nombre\" v-model=\"colonia.nombre\">\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Guardar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default{\r\n    data(){\r\n        return {\r\n            colonia: {\r\n                nombre: ''\r\n            },\r\n            colonias: [],\r\n            modoEditar: false,\r\n            coloniaSeleccionada: null,\r\n            token: null\r\n        };\r\n    },\r\n    created() {\r\n        this.getToken();\r\n    },\r\n    methods: {\r\n        async getToken(){\r\n            try {\r\n                const data = {\r\n                    \"email\": \"correo@gmail.com\",\r\n                    \"password\": \"12345\"\r\n                }\r\n                const token = await axios.post('/login', data);\r\n                this.token = token.data.token;\r\n            } catch (error) {\r\n                console.error('Error al obtener el token: ', error);\r\n            }\r\n        }\r\n    },\r\n    async crearColonia(){\r\n        try {\r\n            if (this.modoEditar) {\r\n                console.log('en proceso')\r\n            }else{\r\n                await axios.post('/colonia/crear', this.colonia, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${this.token}`\r\n                    }\r\n                });\r\n            }\r\n            this.resetForm();\r\n        } catch (error) {\r\n            console.error('Error al guardar la colonia: ', error);\r\n        }\r\n    },\r\n    resetForm(){\r\n        this.colonia = {\r\n            nombre: ''\r\n        }\r\n        this.modoEditar = false;\r\n        this.coloniaSeleccionada = null;\r\n    }\r\n}\r\n</script>"],"mappings":";;EAMaA,KAAK,EAAC;AAAW;;EAETA,KAAK,EAAC;AAAM;;uBAP7BC,mBAAA,CAgBM,c,0BAfFC,mBAAA,CAGM;IAHDF,KAAK,EAAC;EAAa,IACpBE,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAiB,YAAb,UAAQ,E,sBAEhBA,mBAAA,CAUM,OAVNC,UAUM,GATFD,mBAAA,CAQO;IARAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPzBC,cAAA,KAAAC,IAAA,KAOmCC,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAC/BL,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFFR,mBAAA,CAAqD;IAA9CS,GAAG,EAAC,QAAQ;IAACX,KAAK,EAAC;KAAa,QAAM,sB,gBAC7CE,mBAAA,CAA6E;IAAtEU,IAAI,EAAC,MAAM;IAACZ,KAAK,EAAC,cAAc;IAACa,EAAE,EAAC,QAAQ;IAVvE,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAUiFC,KAAA,CAAAC,OAAO,CAACC,MAAM,GAAAH,MAAA;iDAAdC,KAAA,CAAAC,OAAO,CAACC,MAAM,E,+BAE/Ef,mBAAA,CAEM,cADFA,mBAAA,CAA8D;IAAtDU,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC;KAAkB,SAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}