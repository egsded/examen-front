{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"mb-3\"\n};\nconst _hoisted_3 = {\n  class: \"text-center\"\n};\nconst _hoisted_4 = {\n  class: \"table table-striped\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"text-center mt-4\"\n  }, [_createElementVNode(\"h3\", null, \"Examen\"), _createElementVNode(\"h1\", null, \"Colonias\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.crearColonia && $options.crearColonia(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"nombre\",\n    class: \"form-label\"\n  }, \"Nombre\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"nombre\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.colonia.nombre = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.colonia.nombre]])]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Guardar\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Lista de colonias\", -1 /* HOISTED */)), _createElementVNode(\"table\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Nombre\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.colonias, col => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: col.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(col.idColonia), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(col.nombre), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-info\",\n      onClick: $event => _ctx.editarColonia(col)\n    }, \"Editar\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","crearColonia","_hoisted_2","for","type","id","$event","$data","colonia","nombre","_hoisted_3","_hoisted_4","_Fragment","_renderList","colonias","col","key","_toDisplayString","idColonia","onClick","_ctx","editarColonia","_hoisted_5"],"sources":["C:\\Users\\johnny\\Documents\\GitHub\\examen-front\\src\\components\\ColoniasComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"text-center mt-4\">\r\n            <h3>Examen</h3>\r\n            <h1>Colonias</h1>\r\n        </div>\r\n        <div class=\"container\">\r\n            <form @submit.prevent=\"crearColonia\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"nombre\" class=\"form-label\">Nombre</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"nombre\" v-model=\"colonia.nombre\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Guardar</button>\r\n            </form>\r\n        </div>\r\n        <div class=\"text-center\">\r\n            <h2>Lista de colonias</h2>\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nombre</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"col in colonias\" :key=\"col.id\">\r\n                        <td>{{ col.idColonia }}</td>\r\n                        <td>{{ col.nombre }}</td>\r\n                        <td>\r\n                            <button class=\"btn btn-info\" @click=\"editarColonia(col)\">Editar</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            colonia: {\r\n                nombre: ''\r\n            },\r\n            colonias: [],\r\n            modoEditar: false,\r\n            coloniaSeleccionada: null,\r\n            token: null\r\n        };\r\n    },\r\n    created() {\r\n        this.getToken();\r\n    },\r\n    methods: {\r\n        async getToken() {\r\n            try {\r\n                const data = {\r\n                    \"email\": \"correo@gmail.com\",\r\n                    \"password\": \"12345\"\r\n                }\r\n                const token = await axios.post('/login', data);\r\n                this.token = token.data.token;\r\n                this.getListaColonia();\r\n            } catch (error) {\r\n                console.error('Error al obtener el token: ', error);\r\n            }\r\n        },\r\n        async getListaColonia() {\r\n            try {\r\n                const response = await axios.get('/colonias', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${this.token}`\r\n                    }\r\n                });\r\n                this.colonias = response.data;\r\n            } catch (error) {\r\n                console.error('Error al cargar las colonias: ', error);\r\n            }\r\n        },\r\n        async crearColonia() {\r\n            try {\r\n                if (this.modoEditar) {\r\n                    console.log('en proceso')\r\n                } else {\r\n                    await axios.post('/colonia/crear', this.colonia, {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${this.token}`\r\n                        }\r\n                    });\r\n                }\r\n                this.getListaColonia();\r\n                this.resetForm();\r\n            } catch (error) {\r\n                console.error('Error al guardar la colonia: ', error);\r\n            }\r\n        },\r\n        resetForm() {\r\n            this.colonia = {\r\n                nombre: ''\r\n            }\r\n            this.modoEditar = false;\r\n            this.coloniaSeleccionada = null;\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";;EAMaA,KAAK,EAAC;AAAW;;EAETA,KAAK,EAAC;AAAM;;EAOpBA,KAAK,EAAC;AAAa;;EAEbA,KAAK,EAAC;AAAqB;mBAjB9C;;uBACIC,mBAAA,CAmCM,c,0BAlCFC,mBAAA,CAGM;IAHDF,KAAK,EAAC;EAAkB,IACzBE,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAiB,YAAb,UAAQ,E,sBAEhBA,mBAAA,CAQM,OARNC,UAQM,GAPFD,mBAAA,CAMO;IANAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPzBC,cAAA,KAAAC,IAAA,KAOmCC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAC/BL,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFFR,mBAAA,CAAqD;IAA9CS,GAAG,EAAC,QAAQ;IAACX,KAAK,EAAC;KAAa,QAAM,sB,gBAC7CE,mBAAA,CAA6E;IAAtEU,IAAI,EAAC,MAAM;IAACZ,KAAK,EAAC,cAAc;IAACa,EAAE,EAAC,QAAQ;IAVvE,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAUiFC,KAAA,CAAAC,OAAO,CAACC,MAAM,GAAAH,MAAA;iDAAdC,KAAA,CAAAC,OAAO,CAACC,MAAM,E,+BAE/Ef,mBAAA,CAA8D;IAAtDU,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC;KAAkB,SAAO,qB,8BAG7DE,mBAAA,CAoBM,OApBNgB,UAoBM,G,0BAnBFhB,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAiBQ,SAjBRiB,UAiBQ,G,0BAhBJjB,mBAAA,CAMQ,gBALJA,mBAAA,CAIK,aAHDA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGnBA,mBAAA,CAQQ,iB,kBAPJD,mBAAA,CAMKmB,SAAA,QAhCzBC,WAAA,CA0BsCN,KAAA,CAAAO,QAAQ,EAAfC,GAAG;yBAAdtB,mBAAA,CAMK;MANwBuB,GAAG,EAAED,GAAG,CAACV;QAClCX,mBAAA,CAA4B,YAAAuB,gBAAA,CAArBF,GAAG,CAACG,SAAS,kBACpBxB,mBAAA,CAAyB,YAAAuB,gBAAA,CAAlBF,GAAG,CAACN,MAAM,kBACjBf,mBAAA,CAEK,aADDA,mBAAA,CAAwE;MAAhEF,KAAK,EAAC,cAAc;MAAE2B,OAAK,EAAAb,MAAA,IAAEc,IAAA,CAAAC,aAAa,CAACN,GAAG;OAAG,QAAM,iBA9B3FO,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}